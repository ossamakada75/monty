#include "monty.h"

/**
 * push_element - Pushes an element to the stack.
 *
 * @stack: Head of the linked list.
 * @line_number: Line number.
 * Return: No return.
 */
void push_element(stack_t **stack, unsigned int line_number)
{
	int num, index;

	if (!vglo.arg)
	{
		dprintf(2, "L%u: ", line_number);
		dprintf(2, "usage: push integer\n");
		free_vglo();
		exit(EXIT_FAILURE);
	}

	for (index = 0; vglo.arg[index] != '\0'; index++)
	{
		if (!isdigit(vglo.arg[index]) && vglo.arg[index] != '-')
		{
			dprintf(2, "L%u: ", line_number);
			dprintf(2, "usage: push integer\n");
			free_vglo();
			exit(EXIT_FAILURE);
		}
	}

	num = atoi(vglo.arg);

	if (vglo.lifo == 1)
		add_dnodeint(stack, num);
	else
		add_dnodeint_end(stack, num);
}

/**
 * print_all_values - Prints all values on the stack.
 *
 * @stack: Head of the linked list.
 * @line_number: Line number.
 * Return: No return.
 */
void print_all_values(stack_t **stack, unsigned int line_number)
{
	stack_t *aux;
	(void)line_number;

	aux = *stack;

	while (aux)
	{
		printf("%d\n", aux->n);
		aux = aux->next;
	}
}

/**
 * print_top_value - Prints the value at the top of the stack.
 *
 * @stack: Head of the linked list.
 * @line_number: Line number.
 * Return: No return.
 */
void print_top_value(stack_t **stack, unsigned int line_number)
{
	(void)line_number;

	if (*stack == NULL)
	{
		dprintf(2, "L%u: ", line_number);
		dprintf(2, "can't pint, stack empty\n");
		free_vglo();
		exit(EXIT_FAILURE);
	}

	printf("%d\n", (*stack)->n);
}

/**
 * remove_top_element - Removes the top element of the stack.
 *
 * @stack: Head of the linked list.
 * @line_number: Line number.
 * Return: No return.
 */
void remove_top_element(stack_t **stack, unsigned int line_number)
{
	stack_t *aux;

	if (stack == NULL || *stack == NULL)
	{
		dprintf(2, "L%u: can't pop an empty stack\n", line_number);
		free_vglo();
		exit(EXIT_FAILURE);
	}
	aux = *stack;
	*stack = (*stack)->next;
	free(aux);
}

/**
 * swap_top_elements - Swaps the top two elements of the stack.
 *
 * @stack: Head of the linked list.
 * @line_number: Line number.
 * Return: No return.
 */
void swap_top_elements(stack_t **stack, unsigned int line_number)
{
	int count = 0;
	stack_t *aux = NULL;

	aux = *stack;

	for (; aux != NULL; aux = aux->next, count++)
		;

	if (count < 2)
	{
		dprintf(2, "L%u: can't swap, stack too short\n", line_number);
		free_vglo();
		exit(EXIT_FAILURE);
	}

	aux = *stack;
	*stack = (*stack)->next;
	aux->next = (*stack)->next;
	aux->prev = *stack;
	(*stack)->next = aux;
	(*stack)->prev = NULL;
}

