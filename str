#include "monty.h"

/**
 * _custom_strcmp - Compares two strings.
 * @str1: First string to be compared.
 * @str2: Second string to be compared.
 * Return: 0 if str1 and str2 are equal, a positive value if str1 is greater,
 *         and a negative value if str2 is greater.
 */
int _custom_strcmp(char *str1, char *str2)
{
	int i;

	for (i = 0; str1[i] == str2[i] && str1[i]; i++)
		;
	if (str1[i] > str2[i])
		return (1);
	if (str1[i] < str2[i])
		return (-1);
	return (0);
}

/**
 * _char_search - Searches for a character in a string.
 * @str: The string to search within.
 * @c: The character to find.
 * Return: 1 if the character is found, 0 otherwise.
 */
int _char_search(char *str, char c)
{
	int count = 0;

	while (str[count] != '\0')
	{
		if (str[count] == c)
		{
			break;
		}
		count++;
	}
	if (str[count] == c)
		return (1);
	else
		return (0);
}

/**
 * _custom_strtok - Splits a string into tokens based on delimiters.
 * @str: The string to be split.
 * @delimiters: The set of delimiters.
 * Return: A pointer to the first token.
 */
char *_custom_strtok(char *str, char *delimiters)
{
	static char *lastToken;
	int i = 0, j = 0;

	if (!str)
		str = lastToken;
	while (str[i] != '\0')
	{
		if (_char_search(delimiters, str[i]) == 0 && str[i + 1] == '\0')
		{
			lastToken = str + i + 1;
			*lastToken = '\0';
			str = str + j;
			return (str);
		}
		else if (_char_search(delimiters, str[i]) == 0 && _char_search(delimiters, str[i + 1]) == 0)
			i++;
		else if (_char_search(delimiters, str[i]) == 0 && _char_search(delimiters, str[i + 1]) == 1)
		{
			lastToken = str + i + 1;
			*lastToken = '\0';
			lastToken++;
			str = str + j;
			return (str);
		}
		else if (_char_search(delimiters, str[i]) == 1)
		{
			j++;
			i++;
		}
	}
	return (NULL);
}

